---
description: 
globs: *.ts
alwaysApply: false
---
# Playwright Page Object Model Pattern

Each page in our application should have a corresponding Page Object Model (POM) file to improve maintainability and scalability. The POM file should contain all selectors and functions related to that page.

## Key Rules

1. All page interactions should be done via page objects
2. No selectors should be in test files
3. All assertions should be in test files, not in POM files
4. **Always declare locators as readonly** since they will be used for assertions in tests
5. **Access page objects through fixtures** in test files
6. Before adding any new selectors/functions check if you can reuse existing selectors, functions

## Locator Best Practices

1. **Use readonly for all locators** to prevent accidental reassignment:
   ```typescript
   export class LoginPage {
     readonly page: Page;
     readonly usernameInput: Locator;  // Correct: using readonly
     readonly passwordInput: Locator;  // Correct: using readonly
     readonly loginButton: Locator;    // Correct: using readonly
   }
   ```

2. **Expose locators for test assertions** - Page objects should expose locators that tests need for assertions:
   ```typescript
   // In tests:
   await expect(loginPage.errorMessage).toBeVisible();
   await expect(loginPage.welcomeText).toHaveText('Welcome back!');
   ```

## Fixture Structure

- Each test group should have a dedicated `fixtures.ts` file
- The fixtures file extends the base fixtures with page objects
- Test files import and use these fixtures

## Example Fixture

```typescript
// tests/recruiter/assessment/fixtures.ts
import { test as base } from "utils/base-fixtures.js";
import { AssessmentOverviewPage } from "pages/recruiter/assessment/overview/AssessmentOverviewPage.js";
import { QuestionsOverviewComponent } from "pages/recruiter/assessment/overview/components/QuestionsOverviewComponent.js";

type CustomFixtures = {
  assessmentOverviewPage: AssessmentOverviewPage;
};

export const test = base.extend<CustomFixtures>({
  assessmentOverviewPage: async ({ page }, use) => {
    await use(new AssessmentOverviewPage(page));
  }
});

export { expect } from "@playwright/test";
```

## Example Test Using Fixtures

```typescript
// tests/recruiter/assessment/overview.spec.ts
import { test, expect } from './fixtures';

test.describe('Assessment Overview', () => {
  test('displays assessment overview', async ({ assessmentOverviewPage }) => {
    await assessmentOverviewPage.navigateTo('test-assessment-id');
    
    await expect(assessmentOverviewPage.pageTitle).toBeVisible();
    await expect(assessmentOverviewPage.questionsOverview.questionTypeRow).toBeVisible();
  });
});
```

## Project Structure

- Page objects should be in the `pages/` directory
- Fixtures should be in the corresponding `tests/` subdirectory
- Components should be in appropriate subdirectories

## Example

```typescript
// pages/assessment/overview/AssessmentOverviewPage.ts
import { Locator, Page } from '@playwright/test';
import { SettingsComponent } from './components/SettingsComponent';
import { QuestionsOverviewComponent } from './components/QuestionsOverviewComponent';

export class AssessmentOverviewPage {
  readonly page: Page;
  readonly pageTitle: Locator;
  readonly settings: SettingsComponent;
  readonly questionsOverview: QuestionsOverviewComponent;

  constructor(page: Page) {
    this.page = page;
    this.pageTitle = page.getByRole('heading', { name: 'Overview' });
    this.settings = new SettingsComponent(page);
    this.questionsOverview = new QuestionsOverviewComponent(page);
  }

  async navigateTo(assessmentId: string): Promise<void> {
    await this.page.goto(`/assessment/${assessmentId}/overview`);
  }
}

// tests/assessment/overview.spec.ts
import { test, expect } from '@playwright/test';
import { AssessmentOverviewPage } from 'pages/assessment/overview/AssessmentOverviewPage';

test.describe('Assessment Overview', () => {
  let assessmentOverviewPage: AssessmentOverviewPage;

  test.beforeEach(async ({ page }) => {
    assessmentOverviewPage = new AssessmentOverviewPage(page);
    await assessmentOverviewPage.navigateTo('test-assessment-id');
  });

  test('displays assessment overview', async () => {
    await expect(assessmentOverviewPage.pageTitle).toBeVisible();
    await expect(assessmentOverviewPage.questionsOverview.questionTypeRow).toBeVisible();
  });
});
